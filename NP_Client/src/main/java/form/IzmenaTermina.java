/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form;

import controller.UIController;
import domen.Korisnik;
import domen.OpstiDomenskiObjekat;
import domen.Termin;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import table_model.IzmenaTerminaTableModel;

/**
 *
 * @author Mihajlo Popovic
 */
public class IzmenaTermina extends javax.swing.JFrame {

    /**
     * Creates new form IzmenaTermina
     */
    private List<OpstiDomenskiObjekat> aktivniTermini;
    private List<Termin> termini;
    private Korisnik korisnik;
    private Termin t;

    public IzmenaTermina(Korisnik korisnik) {
        initComponents();
        this.korisnik = korisnik;
        Termin termin = new Termin();
        termin.setKorisnik(this.korisnik);
        try {
            aktivniTermini = UIController.getInstance().allTermini1(termin);
            termini  = new ArrayList<Termin>();
            for (OpstiDomenskiObjekat odo : aktivniTermini) {
                Termin t = (Termin) odo;
                termini.add(t);
                System.out.println(t.getSalon().getPib());

            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        System.out.println(aktivniTermini);
        System.out.println(t);
        populateTable(aktivniTermini);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnOtkazi = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Vasi aktivni termini");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnOtkazi.setText("Otkazi termin");
        btnOtkazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtkaziActionPerformed(evt);
            }
        });

        jButton1.setText("Zatvori");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("SKINI LISTU TERMINA");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(btnOtkazi, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jButton2)))
                .addContainerGap(95, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOtkazi)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(44, 44, 44))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOtkaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtkaziActionPerformed
        // TODO add your handling code here:
        try {
            Termin termin = new Termin();
            int row = jTable1.getSelectedRow();
            termin.setVreme((String) jTable1.getValueAt(row, 0));
            termin.setDatum((Date) jTable1.getValueAt(row, 1));
            termin.setFrizer((String) jTable1.getValueAt(row, 2));
            t = vratiTermin(aktivniTermini, termin);
            this.t.setSlobodan(true);
            this.t.setKorisnik(new Korisnik(1));
            Termin ter = (Termin) UIController.getInstance().updateTermin(t);
            JOptionPane.showMessageDialog(this, "Uspesno otkazan termin!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da otkaze termin!");
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnOtkaziActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new KorisnikMainForm(korisnik).setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        System.out.println("Terminii: "+termini);
        try {
            JsonUtil.persistTerminListToJson(termini, "vasi_termini.json");
             JOptionPane.showConfirmDialog(this, "Vasi termini su sacuvani!");
        } catch (IOException ex) {
            Logger.getLogger(IzmenaTermina.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOtkazi;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void populateTable(List<OpstiDomenskiObjekat> aktivniTermini) {
        TableModel model = new IzmenaTerminaTableModel(aktivniTermini);
        jTable1.setModel(model);

    }

    private Termin vratiTermin(List<OpstiDomenskiObjekat> aktivniTermini, Termin termin) {
        Termin t = null;
        for (OpstiDomenskiObjekat odo : aktivniTermini) {
            t = (Termin) odo;
            if (t.getVreme().equals(termin.getVreme()) && t.getDatum().equals(termin.getDatum())
                    && t.getFrizer().equals(termin.getFrizer())) {
                
                return t;
                //this.termin.setSalon(t.getSalon());
            }

        }
        return null;

    }
}
